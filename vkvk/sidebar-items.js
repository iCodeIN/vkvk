initSidebarItems({"constant":[["VK_ATTACHMENT_UNUSED",""],["VK_LOD_CLAMP_NONE",""],["VK_MAX_DESCRIPTION_SIZE",""],["VK_MAX_EXTENSION_NAME_SIZE",""],["VK_MAX_MEMORY_HEAPS","The maximum number of unique memory heaps."],["VK_MAX_MEMORY_TYPES",""],["VK_MAX_PHYSICAL_DEVICE_NAME_SIZE",""],["VK_QUEUE_FAMILY_IGNORED",""],["VK_REMAINING_ARRAY_LAYERS",""],["VK_REMAINING_MIP_LEVELS",""],["VK_SUBPASS_EXTERNAL",""],["VK_UUID_SIZE",""],["VK_WHOLE_SIZE",""]],"fn":[["str_from_null_terminated_byte_slice","Makes a `&str` from all bytes before the first `0` within the byte slice."]],"mod":[["enumerations","Vulkan types where you’re supposed to use one among a list of possible variants."],["flag_bits","Vulkan types where one or more flags are bit-packed together."],["fn_managers",""],["fn_managers_rusty",""],["fn_types","Function types."],["handles","Handles are pointer-like values to objects that can accept commands."],["non_dispatchable_handles","Non-dispatchable Handles are identifiers for objects that don’t accept commands."],["prelude","Lets you grab the entire crate as a single flat API."],["structures","Structure types to interface with Vulkan."],["unions",""],["vk_platform","The parts of the Vulkan API that are presumed to be provided by an outside source."]],"struct":[["VkSampleMask",""],["VulkanVersion","A [`u32`] that encodes a vulkan API version."]]});